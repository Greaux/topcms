environment:
  matrix:
  - dependencies: current
    php_ver_target: 7.1
  nodejs_version: "6"

services:
  - mssql2012sp1
  - iis

build: off



clone_folder: c:\inetpub\wwwroot\topcms
  
## Cache composer, chocolatey and php bits
cache:
    - '%LOCALAPPDATA%\Composer\files -> composer.lock'
    - composer.phar
    # Cache chocolatey packages
    - C:\ProgramData\chocolatey\bin -> .appveyor.yml
    - C:\ProgramData\chocolatey\lib -> .appveyor.yml
    # Cache php install
    - c:\tools\php -> .appveyor.yml

## Set up environment variables
init:
    - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;%PATH%
    - SET COMPOSER_NO_INTERACTION=1
    - SET PHP=1 # This var is connected to PHP install cache
    - SET ANSICON=121x90 (121x90)
on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
## Install PHP and composer, and run the appropriate composer command
install:
    - choco install googlechrome
    - IF EXIST c:\tools\php (SET PHP=0) # Checks for the PHP install being cached
    - ps: appveyor-retry cinst --params '""/InstallDir:C:\tools\php""' --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php_ver_target | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')
    - cd c:\tools\php
    - IF %PHP%==1 copy php.ini-production php.ini /Y
    - IF %PHP%==1 echo date.timezone="UTC" >> php.ini
    - IF %PHP%==1 echo extension_dir=ext >> php.ini
    - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini
    - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini
    - IF %PHP%==1 echo extension=php_curl.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_sqlsrv.dll >> php.ini
    - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat
    - appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar
    - net start MSSQL$SQL2012SP1
    - ps: "Set-Service 'SQLAgent$SQL2012SP1' -StartupType Manual"
    - net start W3SVC
    - ps:  "new-item c:\\tmp -itemtype directory"
    - rmdir c:\tmp /s /q
    - ps: "new-item c:\\tmp -itemtype directory"
    - ps: "(New-Object Net.WebClient).DownloadFile('https://github.com/Microsoft/msphpsql/releases/download/v5.2.0-RC/Windows-7.1.zip','C:\\tmp\\sqlsrv.zip')"
    - cd c:\tmp
    - ps: "(new-object -com shell.application).namespace('C:\\tmp').CopyHere((new-object -com shell.application).namespace('C:\\tmp\\sqlsrv.zip').Items(),16)"
    - dir
    - copy /Y "c:\tmp\Windows-7.1\x64\php_pdo_sqlsrv_71_nts.dll" "c:\tools\php\ext\php_pdo_sqlsrv.dll"
    - ps: "(Get-Item c:\\tools\\php\\ext\\php_pdo_sqlsrv.dll).VersionInfo"
    - ps: "(New-Object Net.WebClient).DownloadFile('http://windows.php.net/downloads/pecl/releases/wincache/2.0.0.8/php_wincache-2.0.0.8-7.0-nts-vc14-x64.zip','C:\\tmp\\wincache.zip')"
    - ps: "(new-object -com shell.application).namespace('C:\\tmp').CopyHere((new-object -com shell.application).namespace('C:\\tmp\\wincache.zip').Items(),16)"
    - copy /Y "c:\tmp\php_wincache.dll" "c:\tools\php\ext\php_wincache.dll"
    - ps:  "(Get-Item c:\\tools\\php\\ext\\php_wincache.dll).VersionInfo"
    - cd c:\tools\php
    - echo opcache.enable=1 >> php.ini
    - echo opcache.enable_cli=1 >> php.ini
    - echo opcache.memory_consumption=128 >> php.ini
    - echo opcache.revalidate_freq=1500 >> php.ini
    - echo opcache.max_accelerated_files=8000 >> php.ini
    - echo wincache.ucenabled=1 >> php.ini
    - echo wincache.ucachesize=128 >> php.ini
    - echo wincache.fcenabled=0 >> php.ini
    - echo realpath_cache_size=5M >> php.ini
    - echo realpath_cache_ttl=1800 >> php.ini
    - echo pdo_sqlsrv.client_buffer_max_kb_size=24480 >> php.ini
    - echo extension=php_pdo_sqlite.dll >> php.ini
    - cd c:\inetpub\wwwroot\topcms
    - ps: "c:\\inetpub\\wwwroot\\topcms\\setup.ps1"
    - ps: cat .env
    - IF %dependencies%==current appveyor-retry composer install --no-progress --profile
    - composer show
    - ps: Install-Product node $env:nodejs_version
    
    - cd c:\inetpub\wwwroot\topcms
    
    - npm install
    
    - SET PATH=%PATH%;%systemroot%\system32\inetsrv\
    - echo Change default anonymous user AUTH to ApplicationPool
    - appcmd set config -section:anonymousAuthentication /username:"" --password
    - echo Setup FAST-CGI configuration
    - appcmd set config /section:system.webServer/fastCGI /+[fullPath='C:\tools\php\php-cgi.exe']
    - echo Setup FACT-CGI handler
    - appcmd set config /section:system.webServer/handlers /+[name='PHP-FastCGI',path='*.php',verb='*',modules='FastCgiModule',scriptProcessor='C:\tools\php\php-cgi.exe',resourceType='Either']
    - iisreset
    - NET START W3SVC
    - composer update
    - choco install urlrewrite --force /y 
    - php artisan migrate --database=SiteInfo
   
## Run the actual test
test_script:
    - cd c:\inetpub\wwwroot\topcms\
    - php artisan dusk